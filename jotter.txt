+ Outstanding tasks for olc page renderer
    + Handle allowing display of first *incomplete* page. What is current_page? maybe that's it, actually. What when the whole course is complete? Perhaps max-page-index limiting will handle this anyway.
    ~ Change progres indicator so current page is a bar thw width of the page
    ~ Consider selecting pages by page_index in the URL, rather than module_id/page_id
    X Module contents page to reflect progress
    ~ Header progress info
    + Proper auth in OLC::authenticate()
    + Progress tracking
        ~ Indicate percentage progress (percentage of pages completed)
        ~ Indicate percentage through that currently displayed page is
        + Disable any page links more than one beyond progress point
        + Provide next/previous page links (what if you're on the first/last page?) (</>)
        + Provide a "resume" link to the last unfinished page (what if all done?) (>>)
        + provide a "start" link to the first page (<<)
        ~ Handle an attempt to see a page past current completion point
    + olc/not_found template
    + more component types (video, test, pdf, progress)
    + CSS for print media
+ Outstanding tasks for OLC admin:
    + more component types (video, test, pdf, progress)
    + Common code in these modules:
        - ComponentSet/ForPage.pm
        - ModuleSet/ForCourse.pm
        - PageSet/ForModule.pm
    + Adding a new page component should always result in a redirect, even on error
    + Landing page editor for courses and modules (perhaps just say the first page [of the first module] is it?)
    + Object model causes lots of unnecessary repeated calls to methods, e.g. loading a page component editor calls the view_data method for all the components on the page lots of times
- OLC Admin: Adding a new page object type
    - Make sure it's in the template templates/o_l_c_admin/parts/component_types.html.ep
    - Create a new class for the component in lib/CRP/Model/OLC/Component/
        - At minimum, override the view_data method
        - May also need to add an around modifier for the data method
    - In lib/CRP/Model/OLC/Component.pm
        - use the new class
        - Add to the valid _TYPES list
    - Add the route in lib/CRP/Controller/OLCAdmin/Component.pm
    - Create a new module lib/CRP/Controller/OLCAdmin/Component/<type>.pm
        - save()
        - edit()
    - Create new template(s) for editor, e.g: o_l_c_admin/component/editor/<type>.html.ep
    - Add routes to the new module in lib/CRP/pm:
        - crp.olcadmin.component.<route>.edit
        - crp.olcadmin.component.<route>.save
    - Add a template templates/olc/components/<TYPE>.html.ep


- Projects
    - Replace protocol handouts with new single-sheet versions or cards or similar
    - Get Carly ready to teach at the college
    - Online course: hand reflexology for existing instructors, particularly Jude
    - Photos, pictures, logos etc for instructors to use in their own marketing (web sites, facebook)
    - Simplified parent course without parent pack
    - Other online courses
    - Insert in the parent pack explaining how to make the most of it
    - Animation

- Fix subscription pop-up not to appear on member sites?

+ Public-facing shop
    + Review page intro in v2templates/main/pages/shop.html.ep
    + Add items (see workflow notes)
    + Enable by uncommenting the menu entry in v2templates/layouts/default.html.ep

-Ideas for new stuff
    - New protocol handouts for parent course
        - One new A5 leaflet with introduction, techniques and reflexes (each with animal, colour, rhyme)
        - A set of A5 protocol cards with the description on one side and a simple list of reflexes on the other
            - The card is intended as a reminder, not qan instruction
            - List of reflexes would have a colour and a thumbnail of the animal and reflex diagram
    - Insert in the parent pack explaining how to make the most of it
        - Change sticker on the outside to make sure it's not just handed to parents
    - New handout which effectively replaces the parent pack so you can teach a course without a pack (so no book or certificate, no weekly handouts)
        - Based on Sure Start/CST-UK
        - Downloadable, personalised (dated?)
        - Buying parent packs is now optional
    - New manual for reflexologists to help treat kids
        - Notes on working with kids
        - Protocols using reflexes not in the main course
        - Downloadable PDF for those with reflex qualifications
        - Available as a printed and bound manual in the shop
    - Stand-alone reflexologists course
        - Includes the stuff in the reflexologists manual
        - No reflexology/A&P
    - Hand reflex course for existing instructors

+ Funnel to capture email addresses - sign up for a free meditation
    + Front page button leads to sign-up form
    + Sign-up form captures email address and other info, sends an email with a confirmation link (hopefully no DB needed at this stage)
        - Could contain all the captured info plus a campaign identifier and date, MD5 signed and base 64 encoded
    + Confirmation link creates DB entry
    + After confirmation grant acess to a premium page and provide an appropriate link - that's the free gift
        - May be a specific premium page depending on the campaign
    + Management interface
        + Extract captured info in format suitable for (e.g.) Mail Chimp
        + Find individual records
        + Unsubscribe people
            + Removes the premium access
        + Stats
    + Need to be able to provide an unsubscribe link
        + Leads to a confirmation page
        + Deletes the DB record
        + Removes the premium access
+ Add explanatory text about trainee watermark when it will be present
+ Add further explanation in the trainee FAQ saying that you can have one course without the watermark
+ Add an FAQ on using parent packs (and accompanying insert in the pack)

+ Online training courses
    + Tests need to be composed of multiple questions - change data model to allow that
    ~ How will we get courses out to live? Or will we just build them there?
        ~ Add a UUID for each course/module/page/component
        ~ Add a last_updated date for each course/module/page/component
            ~ For normal editing/creation this is set automatically to sysdate
            ~ Can also be set to a specific date when importing a course
        + Make a means of reading and writing the last_update (mtime?) time for resource files (e.g. images, PDFs, videos etc used in the courses)
        + Add webservice APIs protected by shared secrets, that can:
            + Recover a list of courses for which updates can be requested
            + Receive a data structure describing a course and return one describing, for that course, a comparison against the local copy of it saying which parts are new, missing, present but older and present but newer
            + Return the content of a course/module/page/component/resource
        + Add an admin tool that uses the above APIs to query the status of a course on a remote server. If we have something that is newer than or not present on the remote then complain, otherwise fetch and update anything that's newer.
            + How to handle huge resources (e.g. video)? May need to spawn an independant worker track it? Fetch to temp files in case of interruption.
    - Types of course
        - Members, e.g. instructors course, associated with a particular qualification. Logged-in users get access if they have the qualification (even if they haven't passed).
        - Visitors, e.g. parents course. Anyone can do these even if they don't have an account. Maybe also available to logged-in users?
    - UX
        - Course landing page is main entry point
            - Contents: list of modules
                - Only completed modules plus the next one can be accessed. Others are shown but not available.
                - List is structured: modules are divided into groups. "Chapters"? Or are these "Modules" and the smaller parts are... "Sections"?
            - Links to generally useful stuff, like how to use the course
            - Progress overview (e.g date started, modules completed/remaining, etc)
            - Indication of whether tutor response is awaited for test (see below)
            - Contact form for course tutor
            - Link to personalised PDF certificate once the course is completed
        - Each module(/section/whatever) shows, when accessed
            - A single page of content
            - The page may contain text, images, embedded video
            - There might be links to local resources, e.g. downloadable (personalised) PDFs
            - There might be links to external resources on third party sites
            - A test which must be passed to complete the module
                - This could be as simple as a button to click which says "OK, I understand"
                - Multiple-choice questions may be radio (one possible answer) or checkbox (multiple answers can be selected)
                - There could also be text questions and questions where things have to be uploaded
                - If the questions are multiple-choice only then the system can mark the test and unlock the next module
                - More complex tests will send an email to the course tutor to be marked and the tutor must then indicate pass or fail - typically used only for the last module in the course, to get the certificate issued.
        - When the last module is passed the associated qualification is automatically marked as passed
    - Data model
        - A course is an ordered list of modules, which may appear in many courses.
        - A module is an ordered list of pages, which may appear in many modules.
        - A page is an ordered list of components, which may appear in many pages.
            - Pages have nav inserted automatically, as required. next/previous buttons, course home and module home.
            - Next button is only available when all the tests on a page are marked as completed, or if there are no tests.
        - OLC_COURSE: Course definition record
            - ID
            - Name - for internal use
            - Notes - for internal use
            - Title
            - Description
            - Landing_OLC_Page_ID
        - OLC_COURSE_MODULE_LINK: Course/module association record
            - OLC_Course_ID
            - OLC_Module_ID
            - Order
        - OLC_MODULE: Module definition record
            - ID
            - Name - for internal use
            - Notes - for internal use
            - Title
            - Description
            - Landing_OLC_Page_ID
        - OLC_MODULE_PAGE_LINK: Module/page association record
            - OLC_Module_ID
            - OLC_Page_ID
            - Order
        - OLC_PAGE: Page definition record
            - ID
            - Name - for internal use
            - Notes - for internal use
            - Title
            - Description
        - OLC_COMPONENT: Component definition record
            - ID
            - OLC_Page_ID (indexed)
            - Name - for internal use
            - build_order
            - Type - heading/paragraph/image/video/pdf/course-contents/module-contents/test/etc
            - Data_version
            - Data - type-specific content blob
                - Heading: a line of text and a heading style
                - Paragraph: a block of markdown
                - image: a pathname, style info (size? alignment?)
                - video: a pathname
                - PDF: a pathname; appears on the page as a link
                - Course contents: no data required (a generated list of modules and pages, some being links to the relevant pages depending on whether tests are completed; no pages beyond the first with an incomplete test are available)
                - Module contents: no data required (a generated list of pages, some being links to the relevant pages)
                - Test: serialised data with test questions and expected answers (or tutor mark required), grade boundaries (maybe very simple pass/fail)
        - Tutor record
            - ID
            - Name
            - Email
        - Student record
            - ID
            - Type (e.g. TCRP user, premium content user, etc)
            - Foreign ID (depends on Type)
            - Course ID
            - Status (not started/in progress/completed/abandoned/etc)
            - Start date
            - Last access date
            - Completion date
            - Progress record - serialised answers given to questions in each test and corresponding mark for each. Identified by test ID.
        - Test questions come in various types:
            - Confirmation - a single button like "OK, I understand". Clicking the button passes the test.
            - Multiple choice, single answer (radio buttons)
            - Multiple choice, multiple answers (checkboxes)
            - Text line - answer must match a regexp or similar
            - Text area - tutor mark required
            - File upload - tutor mark required
        ? How will we personalise the course content? Store data when the course is started or refer back to the parent record (e.g. TCRP instructor record)?

+ Spring site refresh
    + /page/press
        + Create
        + Add press banner to home page
    + Shop
        + Create

+ General purpose pictorial poster - version with course details

+ Stand-alone reflexologists' course
    - Like a professional course
    + No expiry date
    + Need a way to search for professionals (i.e. people that have resource pages but no login)
    + Add resources
        + Attendee
            + Handout(s)
            + Bespoke protocol form
            + Advertising leaflet/flyer
            + Follow-up advice
        + Add certificate PDF for the qualification as pdfs/Attendee_Certificate_$code.pdf
        + Add a new PDF for the instructor course poster
        + Enable any existing course-specific PDFs that apply to the course
        + Add any new course-specific PDFs
            + Booking form
            + Sales Letter
    + Update the web site to talk about the new course
        + "Home" page - short mention
        + "Programme" page(s) - more details, perhaps a new page split off
        + "Courses" page(s) - more details, perhaps a new page split off
        + "Instructors" page(s) - more details, perhaps a new page split off
        + Anything else
    + Add any new products to the shop
        + Trainer's pack

+ Professionals
    ~ ANPro booking form
    + Suspend a student
        + verification page unavailable
        + attendee page unavailable
        + Clearly marked as suspended in list
        + Un-suspend
    + Instructors can manage attendees
        + Search for individuals by name, email, course attended, qualifications about to expire
        + Do most of the things on the attendees page for a course
        + Send an email to everyone whose qualifications will expire soon
    + Publicly visible list of qualified professionals
        + Only include those with up-to-date certificates
        + Says what qualification they have and who qualified them
        + Search by organisation
    + Add resources for AN PRO course
        + Update the web site to talk about the new course
            + "Home" page - short mention
            + "Programme" page(s) - more details, perhaps a new page split off
            + "Courses" page(s) - more details, perhaps a new page split off
            + "Instructors" page(s) - more details, perhaps a new page split off
            + Anything else
        + Add any new course-specific PDFs
            + Sales Letter (course specific? maybe not but only available to qualified ANPRO instructors)
        + Add any new products to the shop
            + Trainer's pack
    + Add resources for EY PRO course
        X Add certificate PDF for the qualification as pdfs/Attendee_Certificate_$code.pdf => The generic one serves
        + Add a new PDF for the instructor course poster
        ~ Enable any existing course-specific PDFs that apply to the course
        ~ Add any new course-specific PDFs
            ~ Sales Letter (course specific? maybe not but only available to qualified EYPRO instructors)
        + Add attendee PDFs
            + Advertising leaflet
            + Consent form
        + Update the web site to talk about the new course
            + "Home" page - short mention
            + "Programme" page(s) - more details, perhaps a new page split off
            + "Courses" page(s) - more details, perhaps a new page split off
            + "Instructors" page(s) - more details, perhaps a new page split off
            + Anything else
        + Add any new products to the shop
            + Trainer's pack

+ Premium content space for e-courses etc
    ~ URLs like /premium/*dir/*id/....
    - id is a wordnum that gets a unique ID in an auth table
    ~ content is in premium/templates/dir
    ~ static content from premium/static/dir
    ~ auth table:
        ~ id (PK)
        ~ create date
        ~ dir
        ~ owner email (indexed)
        ~ owner name
        ~ disabled flag
    - authorisation is by an auth cookie or by lookup in the auth table to generate the cookie
    ~ auth cookie is a long-lived cookie with the path set to /premium/*dir that has the id, dir, name, email and expiry date (about a week), encrypted in it
        - eg: $c->signed_cookie(premium => "prem stuff", {httponly => 1, path => '/instructor'});
        ~ pseudo-code for auth process:
            - if(cookie present and (id == cookie id or id == "_authorised")) {
            -     decrypt cookie;
            -     if(*dir == cookie dir) {
            -         if(cookie expired) {
            -             generate cookie for cookie id or redirect to access page and exit;
            -         }
            -     }
            -     else {
            -         redirect to access page and exit;
            -     }
            - }
            - else {
            -     check dir exists or premium 404;
            -     generate cookie for *id or redirect to access page and exit;
            - }
            - if(*id != "_authorised") {
            -     redirect to /premium/:dir/_authorised/sub-path;
            -     exit;
            - }
            - display page or premium 404;
        - This auth process is designed such that:
            - Most authorisation is by cookie, so it's quick
            - New cookies are generated reasonably often so lockouts etc are effective
            - Most access is through a URL that doesn't include the ID so sharing it won't work
    ~ should do the normal kidsreflex cookie notification
    ~ Need a means to deliver premium content other than pages (images, video, etc)
        ~ static content in premium/static/:dir with URL /premium/:dir/:id/static/*path
        ~ streaming content in premium/stream/:dir with URL /premium/:dir/:id/stream/*path
        ~ How to handle streaming content?
    ~ access pages have some common content:
        ~ allow entry of an email address to get an email containing links to all authed premium content for that email
        ~ some means of complaining if you think you should have access
    - access page template is templates/premium/dir/access.html.ep
    ~ Each newly created auth cookie is logged in the cookie log table:
        ~ id (PK)
        ~ auth_id -> auth table (indexed)
        ~ timestamp
        ~ remote IP
    + Admin functions
        ~ New admin menu
        + Create a new auth entry
            ~ Pick dir from drop-down and enter email address, name
                ~ Drop down is generated by examining directories and checking for welcome.html.ep and access.html.ep
            ~ Don't allow duplicates (dir+email)
            ~ Send an email with the new authed link to the owner
                ~ Some of the email content might come from a template inside the premium directory, welcome.mail.ep
        + Search for an email address
            + Show access stats
            + List auths
                + enable/disable for each
                + set name for each
            + Send an email containing links to all authed premium content for that email
        + Look at a premium dir
            + Stats
                + Number of auths
                + Cookie creation stats
                + Etc
            + List auths
        + Get stats that suggest abuse
            + Overlapping cookies
            + Multiple IP addresses
        - Note: Creating new premium content is just adding the template directory with an access page and a welcome page
    + Tests
        + Try to get to a non-existant premium site: premium 404
        + Try to visit a premium site through /premium/*dir/authorised
            + without sub-path
                + With valid cookie: welcome page with correct name/email shown
                + With expired cookie: welcome page with correct name/email shown
                + Without cookie: access page
            + with sub-path
                + With valid cookie: correct sub-page
                + With expired cookie:
                    + Auth disabled: access page
                    + Auth not disabled: correct sub-page with correct name/email shown
                + Without cookie: access page
            + with invalid sub-path
                + With valid cookie: premium 404
                + With expired cookie: premium 404
                + Without cookie:  access page
        + Try to visit a premium site through /premium/*dir/*id
            + without sub-path
                + With valid cookie: welcome page, via URL /premium/*dir/authorised, with correct name/email shown
                + With valid cookie for a different ID: welcome page, via URL /premium/*dir/authorised, with correct name/email for different ID shown
                + With expired cookie:
                    + Auth disabled: access page
                    + Auth not disabled: correct sub-page, via URL /premium/*dir/authorised, with correct name/email shown
                + Without cookie:
                    + Auth disabled: access page
                    + Auth not disabled: correct sub-page, via URL /premium/*dir/authorised, with correct name/email shown
            + with sub-path
                + With valid cookie: correct sub-page, via URL /premium/*dir/authorised, with correct name/email shown
                + With valid cookie for a different ID: correct sub-page, via URL /premium/*dir/authorised, with correct name/email for different ID shown
                + With expired cookie:
                    + Auth disabled: access page
                    + Auth not disabled: correct sub-page, via URL /premium/*dir/authorised, with correct name/email shown
                + Without cookie:
                    + Auth disabled: access page
                    + Auth not disabled: correct sub-page, via URL /premium/*dir/authorised, with correct name/email shown
            + with invalid sub-path
                + With valid cookie: premium 404
                + With valid cookie for a different ID: premium 404
                + With expired cookie:
                    + Auth disabled: access page
                    + Auth not disabled: premium 404
                + Without cookie:
                    + Auth disabled: access page
                    + Auth not disabled: premium 404
        + Try to visit a premium site through /premium/*dir/*invalid-id
            + without sub-path: access page
            + with sub-path: access page
    - http://videojs.com/ looks like a good video player

+ Add new Instructor Trainer qualifications
    + Add instructor course PDFS
        - list in templates/trainers/course_docs.html.ep
        + TCRPINST
                + Flyer based on \\REVOLVER\susan-home\The Children's Reflexology Programme\Instructor Course flyer
                ? Other flyers etc?
        + TCRPREFLEXINST
            - From \\REVOLVER\susan-home\The Children's Reflexology Programme\Instructors course\TCRP Instructor Trainer Course Materials
                ~ Course checklist
                + Instructors Confirmation
                + Instructors Booking Form
                + Instructors Feedback Form
                + Micro-teach assessment
                + Register
                + Student progress
            - Others
                + Flyer based on \\REVOLVER\susan-home\The Children's Reflexology Programme\Instructor Course flyer
                ? Other flyers etc?
        + TCRPANINST
            - From \\REVOLVER\susan-home\The Children's Reflexology Programme\Instructors course\TCRP Instructor Trainer Course Materials
                + Course checklist
                + Instructors Confirmation
                + Instructors Booking Form
                + Instructors Feedback Form
                + Micro-teach assessment
                + Register
                + Student progress
            - Others
                + Flyer based on \\REVOLVER\susan-home\The Children's Reflexology Programme\Instructor Course flyer
                ? Other flyers etc?
    + Other possible template changes
        + templates/parts/instructors_course_list.html.ep "If I'm not currently running a course near you"
        + templates/parts/instructors_course_list.html.ep "I am always happy to travel"
        + templates/main/pages/instructor_booking.html.ep "I will get back to you as"
        + templates/main/pages/instructor_booking.html.ep "I am really looking forward"
        + templates/main/pages/instructor_booking.html.ep "I may not be able to run the separate two-day course"
        + templates/main/pages/instructor_booking.html.ep  "secure your place once I have confirmed that there is one available"
    + Add certificate PDF for the qualification as pdfs/Qualification_Certificate_$code.pdf
    + Add new banner PDFs for instructor trainers
    + Add any new products to the shop

+ Facility to suspend an account
+ Show email address when setting password on an account

+ Instructors should have a record of purchases made
    + Enter an order
        - [ID]
        - Date
        - Source (paypal, phone, email)
        - Reference (paypal ID, their order number)
        - Description
        - Amount paid
        - Fulfilled?
        - Paid?
        - Instructor ID
    + Find (un)fulfilled/(un)paid orders
        - Mark as (un)fulfilled
        - Mark as (un)paid
        - Edit
    + Instructor Admin page needs a summary in the stats with a link to the list(s)
    + Main admin page needs summaries in the stats linking to relevant lists
    + Download a PDF order sheet for an order:
        - Address to cut out and stick on the envelope
        - List of any orders within a couple of days of the date for the same instructor
            - Tickboxes for when they're made up




+ Further qualification tracking
    + For each qualification, record what assignments have been completed when and the results
    + Qualifications are not passed until all assignments received
    ? Record pass date separately from course date?
    + Instructors with past qualifications but incomplete assignments are still trainees
    + Search for instructors with incomplete assignments
    + Qualifications with complete assignments have their certificates available as PDFs with "COPY" stamped on them
    + Check these things happen (they probably do already)
        + Membership certificates show trainee status for qualifications with incomplate assignments


+ AN parent course
    * Make the new parent packs
        * Techniques leaflet
    + Add new AN instructor qualification
        ~ Add record in DB with a schema update
        ~ Add certificate PDF for the qualification as pdfs/Qualification_Certificate_$code.pdf
        + Add a new PDF for the instructor course poster
        + Update the web site to talk about the new instructor course
            + "Home" page - short mention
            + "Programme" page(s) - more details, perhaps a new page split off
            + "Courses" page(s) - more details, perhaps a new page split off
            + "Instructors" page(s) - more details, perhaps a new page split off
            + Anything else
        + Add any new products to the shop
    * Add parent course type(s) for the new qualification
        ~ Add record in DB with a schema update
        ~ Review parent-course PDFs:
            ~ Some may be good for the new course without change
            ~ Some could be changed to work for the new course as well as existing courses
            ~ Some may need changing for the new course in a way that breaks them for existing courses (so new versions needed)
            ~ Additional, completely new documents may be needed
        ~ Create any new/altered parent-course PDFs required
            ~ Change: Booking form (plus A5 version)
            ~ Change: Register - protocols on back page must change; other things
            ~ Add: Mental capacity letter and form
            ~ Add: AN Roller banner
            ~ Add: Other new posters in: \\REVOLVER\susan-home\The Children's Reflexology Programme\Special Needs\New PDF's for website
            + Add: Course poster for older kids
        ~ Make new and existing PDFs available in templates/members/course_docs.html.ep
            ~ Which existing PDFs? All of them? => The ones that haven't changed (all but booking form and register)
        ~ Create and show a new parent course advertisement page for the new parent course type
        ~ Create and show the right parent course online booking form for the parent course type
            ~ Refer to the Mental Capacity form
        ~ Create and show the right parent course PDF booking form for the parent course type
            ~ Refer to the Mental Capacity form
        * Add any new products to the shop (parent packs etc)
    ~ Add FAQ article for Mental Capacity decision form
* Change some existing PDFs to generalise for AN as well as normal TCRP
    * Change "baby" to "child"
    ~ "courses are available with material for...." needs to be generalised
X Remove docs from main docs where they are also in the course docs. Do people really need these generalised versions? Perhaps yes, for marketing type puposes.

+ AN Instructor course for Claire to run
    * Instructor pack
        * Hand technique posters
        * Instructor trainer's manual
        * Instructor trainer's check-list for evidence of training, to get certificates
    * Decide price
    * Check booking form will work as it currently is
    * New version of booking acknowledgement/confirmation for Claire to use
    * New PDF poster for instructor course

+ Booking forms (generic PDF, course PDF, online) say don't bring child after immunisations, should be if unwell (or similar)

+ Preliminary changes for EYP course
    + New page describing it
    + Instructors can add trainees to a list of certified EYPs
        + Only if they're an EY instructor
        + See a list of practioners they've trained (Name, Date added (auto), Pack ID, Short note)
        + Add new ones
        + Download filled-in certificate PDF for any one
        + Each certificate has a signature
        + Certificateemail to site admin when an edit is done
        + Revoke ce signature can be validated to see certificate on site
        + Edit details (Name, pack ID)
            + Sends rtificate
            + Send email to site admin
    + Site admins can see registered EY practitioners
        + List by instructor
        + Search by name, Pack ID
        + View certificate via signature link
        + Download certificate PDF
        + Revoke certificate

+ New AN courses
    + Not in the MVP:
        + Account search improvements
            + Find demo accounts only
            + Find trainee accounts only
            + Find accounts with specific/no qualifications
        + Main admin page:
            + stats link to lists of trainees
            + stats link to list of qualified instructors
        + Facilities to maintain course types
            + List them
            + Edit them, can't edit the code
            + Delete unused ones
        + Instructor searches shouldn't find trainees
        + The hidden list of instructors for Google shouldn't include trainees

+ New PDFs for magazine adverts at various sizes

+ When the new book comes out
    + Update book page
    + Add to the shop page?

+ Order book: date ordered, who, qty, desc, amnt paid, date sent, post cost
+ Accident book

+ Add a page about running your first course and collect anecdotes from instructors who've done it
+ Add PDF forms for collecting research data
    + Could be a form on the site for entering it and automatically collecting

+ Add captions to the pictures indicating that they are for illustration only
    + New picture of course materials not showing feet

+ Changes to course manual
    + Change music to the way it's sung now
    + Homework colouring page could have animals on it
    + Add 'venue housekeeping'
    + More about therapeutic touch, earlier on
    + Non-copy agreement

+ Parent booking form agreement could include something about treating each other with respect, non-discrimination

+ Courses page: "The course shows you how to treat specific conditions of childhood"
+ PDF talk notes: "course shows you how to treat specific conditions of childhood"

+ Instructor course admin
    + Add extra info to instructor course records
        + Notes (to record where you're staying, travel details, address of course, contacts etc etc)
        + Checkboxes for various things? (e.g. venue booked, hotel booked, travel arranged, number of packs reserved/sent, etc)
    + Add a table with a record for each person that books on to a course
        + Name they booked under
        + Contact details (phone, email, post)
        + Reflexologist flag
        + Price agreed
        + Pay-by date
        + Transactions
        + Everything from the booking form
        + Everything needed for the student progress tracking form
        + Notes
    + Admin facilities for courses
        + PDF Documents
            + Booking acknowledgement
            + Register
            + Student progress forms
            + Certificates
        + per-course status sheet (students with balances, packs required, checklist of hotel booking etc)
        + List of courses with numbers booked, packs required etc
        + Create pre-qualification instructor accounts for students
        + Mark students accounts as qualified
    + Extra facilities on instructor accounts
        + Extra table indicating qualifications
            + Type code (e.g. instructor, school, special needs etc)
            + Date of course
            + Success flag
        + Pre-qualification mode
            + Public page indicates that they haven't qualified yet and when they should
            + Certificate page indicates that they haven't qualified yet and when they should
            + Can only create a limited number of courses (one?)
            + Main pages remind them that this is a pre-qualification account
            + Extra page where they can find out about courses they are signed up for (when they are, what they've paid, what they owe, booking acknowledgement PDF with up-to-date info)

+ Add some sort of monitoring

X Is there a memory leak somewhere? PDF rendering?
    - There does seem to be - we occasionally get failures because there's not enough memory to fork a child process
    - Removing the etag handler doesn't seem to help
    - Apparent association with fetching PDFs seems to be just because they are large content. Happens with other things but less obviously. Process grows by amount related to size of fetched document.
    - Looks like this happens in Morbo as well as Hypnotoad
    - Possibly this is just normal memory consumption. Limting the number of connections before restarting has helped anyway.

+ Some method of finding unsatisfied enquiries to decide where to put courses on etc.

+ Add pic of course materials to courses page

+ More FB opengraph stuff
    + Home page

+ Refactoring
    + Move duplicate code from the instructor and ordinary course models into a common module
    + CRP::Controller::Members::_display_course_editor_with() should load the course into $c->param rather than passing the course_record to the template
    + CRP::Controller::Trainers::_display_course_editor_with() should load the course into $c->param rather than passing the course_record to the template
    + Move business logic off shop template and into code

X Add links to AOR (Friend membership) and Lexie's (?) parenty thing

+ Typo in the general advice section on the back of the parent course booking form

+ Generate personalised PDFs:
    ~ A3 versions of some
    + Course log/diary pages
    + Name labels for carers and kids (with pictures of animals, to be coloured in)
    + Quite a few PDFs still say "Infant Reflexology" instead of "Children's Reflexology"
+ The instructor's 'search for enquiries' page should start with location rather than postcode
+ Should the postcode in the profile be mandatory?
+ Pass some images through tinyjpg/tinypng
+ Limit numbers in search results. Enquiries - find near location, notify_enquirers.
+ Adding a new enquiry should notify the instructors of nearby courses if requested
+ FAQ/External resources: bibliography (for instructors)
    - Affiliate link to Leoni Dawson?
    - Other training courses
    - Neal's Yard store
+ Get rid of all references to Tutor/practitioner
+ Finish up PayPal shop layout with logo/header

- For the instructor-trainer pack
    - Student tracking sheet (see below)
    - Prints of (many of) the PDFs available from the site
    - Disruption cards
    - Peer/self assessment forms
    - Certificates
    - Frames for main certificate?
    - Student tracking sheets


- One parent pack weighs 628g


----

+ Twitter/FB connections
    + Main site linking to kidsreflex twitter/fb
    + Instructor sites linking to instructors' twitter/fb
    + On publishing a course, have an option to tweet/fb/whatever
+ Publishing a course could take a long time to notify all the enquirers.
+ Refactor templates to further generalise location input.
+ use named paths in menus (and elsewhere)
+ handle auto-login flag
+ First visit to enquiry page is slow to load: jquery? gmaps?
+ Check if session methods really need to have $c as first param
+ Login/auth logic from spreadsheet
+ tests!!
+ Move validation to a plug-in?
~ Get an SSl certificate and move to HTTPS for everything

- New materials for instructors course:
    - Timetable?
    - Booking form (personal details, payment).
    - Pre-course booking acknowledgment with details of what to bring, where to come, when to arrive.
    - Homework assignment handouts to take away during the course (colouring?).
    - Homework assignment handouts to take away after the course.
    - Peer/self assessment forms for microteach.
    - Disruption cards for microteach exercise.
    - Reflective practice log.

- Cookie session contains:
    - id: CRP Session ID
    - auto_login_id: Auto-login instructor ID (if any)
    - instructor_id: Logged in instructor id
    - last_access: Last access date (epoch)
- Cookie expires after session expiry time or auto-login expiry time if it has auto-login
- On logout
    - Delete the CRP session
    - Set the CRP session ID in the session cookie to null
    - If there's no auto-login, set $c->session(expires => 1) to delete the session cookie


session:
    new($c): discard existing session and create a new one. if there's a cookie, attempt to retrieve a session from it.
    set(attribute, value): set or delete an attribute. Set dirty flag as required.

+ Certificate management
    + Database table with: certificate_id, instructor_id, issue_date, life_time, type, version, issuer_id, instructors_name, revocation_date, revoker_id
        - Type is for course certificates and renewal certificates (and maybe others at some point)
        - Version is so we can have different PDFs over time and reprints will still use the originals
        - issuer_id is for the trainer that issued the certificate and is duplicated for automatic renewal. NULL means Sue!
        - instructors_name is recorded in case it changes after issue, so the original certificate can be reproduced
    + When an instructor qualifies or they qualify for certificate renewal, add a row to the certificate table.
    + Facility to produce a PDF of the certificate with an electronic signature encoding the certificate_id, including a QRcode, with or without scan of issuer's manual signature
    + Development system marks certificate as sample
    ~ Certificates can be checked easily by going to a URL that includes the certificate's electronic signature
        ~ Page shows certificate details (or message saying it's not valid)
        ~ Link to instructor's personal page
    + Instructors can easily get a PDF copy of their most recent renewal certificate by a link in their control panel
    + Administrators can create and revoke certificates
    + Administrators can get PDFs of certificates without the scanned issuer's manual signature, for the issuer to actually sign

+ Carers' area
    ~ Search for instructors by location
    + More information about CRP
    + Information about what you get if you do the course
    + Register interest / find course
        ~ Finds upcoming courses in local area
        ~ Optionally stores information for notifications:
            ~ Creates a 'suspended' record and sends a confirmation email with an activation link
            ~ Notify carer about new courses that come up in the area (that they aren't registered for)
            ~ Notify instructors about carers interested in courses they register
            ~ General newsletter - immediately composes and sends a current one (see below) when record is activated
        + Facility to manage notifications
            ~ Simple, no password, linked to from all emails sent out
            ~ Shows a list of notifications and lets you opt in/out of any/all
            + Lets you change other stored information
                ~ Name
                + Email
                    + suspends record and re-sends confirmation with activation link
                    + notifies instructors of any current/future courses that have the old email address
                ~ Location
                X Courses of interest => not recording this - too difficult to acquire accurately
            + Lets you delete the record completely
            X Any change to stored information sends a confirmation email to the address => Might send a lot of email
        ~ Suspended records are deleted when they get too old
    + Carers' forums
    + Submit (an idea for) a newsletter article
    + Shop
        + Books
        + Squeezy feet?
        + Merchandise
        + Colouring books
    + Carer's contact form (for contacting CRP as a carer)
    + For each course registered by a instructor there will be a page describing that course that the instructor can link to
        ~ Sensible static URL so Google can index it
        ~ Courses that have already started (or finished) will still show up but will be clearly marked
        ~ Cancelled courses will still show up but will be clearly marked
        + Online booking form for the course if it's in the future (with Ts&Cs)
        ~ Link to PDF booking form for the course
    ~ A list of registered future/current courses (possibly hidden a bit - this is really for Google)
    ~ For each registered instructor there will be an automatically generated page with their details and a list of upcoming courses
    ~ A list of registered instructors (possibly hidden a bit - this is really for Google)
    + Gallery
    + Success stories
+ Instructors' area
    + More information about teaching CRP to carers
    + Information about the course
        + Content
        + Pricing and timing
        + Details of what you get if you do the course
    + Shop
        + Anyone can browse but you need a instructor's account to buy and see prices
        + Sells student packs, extra course notes, posters, stuff from carers' shop etc, etc
    + General instructors' contact form (for contacting CRP as a potential instructor)
    + Signed-up instructors area
        ~ Needs an account created by an administrator (happens when they do the course)
        ~ Edit profile
            ~ Change stored details
                ~ Name
                ~ Telephone
                ~ Public postal address
                ~ Photo / logo
                ~ Personal blurb (paragraph or so)
            ~ Admins notified of changes by email (to prevent generating PDFs for others)
            ~ Generates instructor's page in carers' area of site
        ~ Change password
        + Change email address:
            + sends a confirmation link in email to the new address
            + sends a warning email to the old address.
            + The confirmation email will work within a short period and will require entry of password.
        + Messages shown on login (from admins/system)
        ~ Get a list of carers that have expressed interest near a particular place
        + Record details of a course
            ~ Stores details:
                ~ General location to identify nearby carers (e.g. 'Exeter')
                ~ Location description for paperwork (e.g. 'Cowick Library')
                ~ Start date
                ~ Time
                ~ Type (toddlers/newborn/etc)
            + Record details of a carer attending a course
                + Do we really want to do this? Could be privacy issues
                + Records name, child's name, telephone, email54
                + Allows generation of better registers
                + Generate a record in the interest database so that newsletters will go out
            ~ Shows list of interested carers enquiries nearby
            ~ Generates a course page in the carers' area of the site
        + Change details of a course
            + Does not re-send notifications to nearby interested carers
            + Option to cancel completely
            + Updates course page in carers' area
        + Generate peronalised PDFs:
            + All PDFs are personalised with instructor's contact details
            + Various documents are available, some with extra details added:
                + Completion certificate: (could have carer's and child's names, perhaps entered when generated)
                ~ Booking form: Course type/location/day of week/start date/time
                ~ Register: Course type/location/day of week/start date/time (plus attendees' details?)
                ~ Generic flyer
                ~ Generic poster
                ~ Course flyer: Course type/location/day of week/start date/time
                ~ Course poster: Course type/location/day of week/start date/time
                ~ Business cards: Avery C32011, C32016, C32025, C32026, C32050, C32055, C32075  - 10 off 85*54mm
                + Name labels for carers
                + Talk/presentation
                + Course log/diary pages
            ~ QR codes for web pages?
        + Signed-up instructor's contact form (for contacting admins)
        + Submit (an idea for) a newsletter article
        + instructors' forum using same login
        + Link to shop
        + Course costing calculator(s) - JS versions of the spreadsheets
        + External resources: bibliography
        ~ Log out
+ Administrators' area
    + Requires login
    + Access to stats of various sorts
    + Access to internal test pages even on production servers
    + Admin user account admin
        + Add new accounts
        + Manage permissions for different parts
    + Profile change
        + Name
        + Password
    + Search carers' records and link to the notification management facility for them
    + Clean out old suspended carer notification records
    + Shop management facilities
    + Manage signed-up instructors
        + Create an account
        + Search for instructor's account and log in as them for support purposes
        + Revoke instructor accounts
        + Send message to individual instructors or groups of them
            + Messages sent in email
            + Messages also appear in instructors' accounts when they log in
    + Get a list of carers that have expressed interest near a particular place
    + Newsletters
        + Create and edit articles where each one has, in addition to content:
            + Categorisation tags
            + Location relevance (centre, radius) or 'all' (presets for major geographical areas)
            + Creation date
            + Expiry date (e.g. for articles about courses - expire when the course starts)
            + Date last sent to mailing list (could be many, one per mailing list)
            + Importance - makes it appear higher or lower in the newsletter
            + Cut-down version for repeating as padding in later newsletters
            + Newsletter types this article is suitable for (carer/instructor/etc)
        + Search for articles
        + Delete (retire?) articles
        + A newsletter can be composed for carer based on their location and whether articles have already been sent
        + A web page can be generated for each news letter - maybe several, geographically split, or a universal one
        + An index of newsletters will allow Google to find them
        + Each new article can also be a new blog post
        + Articles are not necessarily directly CRP related
        + Similar approach for generating and maintaining instructors' newsletters
    + Log out

 + Possible feature to track course assessments
    - On intial sign-up, each new instructor must do some post-training assessments by certain dates
    + Each assignment has a description, a response from the assessor, and a 'done' flag
    + Instructor's home page reminds them to complete assignments
    + Administrators can mark assignments done
    + Administrators get warning emails when assignments are (in danger of) running late
    + Instructors accounts are eventually disabled if assignments not completed
    + Administrators can extend due dates on assignments
    + Administrators can add new assignments at any time

 + Could each instructor have their own shop which earns them commission? (accounting problems? liability? perhaps they just earn credit)


#----------------------------------------------------------------------------

 Workflow notes
 --------------
 - DB changes:
    + Modify lib/CRP/Model/Schema/Result/*
    + Update version number in lib/CRP/Model/Schema.pm
    + check status - run: carton exec ./script/crp migrate status
    + run: carton exec ./script/crp migrate prepare
    + check new autosql files like: share/deploy/migrations/PostgreSQL/upgrade/1-2/001-auto.sql
    + if any tweaks are needed:
        + copy new autosql to one or more numbered sql files in the same directory
        + tweak as required
        + remove 001-auto.sql
    + Add any additional scripts required (e.g. backfill for new data)
    + run: carton exec ./script/crp migrate upgrade
- Adding new data to DB without any schema changes
    + Update version number in lib/CRP/Model/Schema.pm
    + check status - run: carton exec ./script/crp migrate status
    + run: carton exec ./script/crp migrate prepare
    + check new autosql files are empty, like: share/deploy/migrations/PostgreSQL/upgrade/23-24/001-auto.sql
    + Add scripts to create new data, like: share/deploy/migrations/PostgreSQL/upgrade/23-24/create_an_qualification.sql
    + run: carton exec ./script/crp migrate upgrade
- Making PDFs in Xara
    + Choose email/web download
    + In advanced options, choose PDF v1.3 for Adobe Reader 4
- Making PDF thumbnails
    + Load test PDF into Chrome
    + Zoom to 75% (or 50% for A3)
    + Snip and copy to clipboard (Alt-PrtScr)
    + Paste into Xara (use the TCRP PDF Thumbs template)
    + Set units to pixels
    + Move to pixel boundary
    + Cut out desired part (A4 is evidently 595x840px at 75%, A3 is 560x793px at 50%)
    + Scale result to 149x210px and move to pixel boundary
    + Export as JPG with same name as PDF but .jpg extension
- Releasing a new version
    + Make sure release note is updated (use relnote script): templates/members/faqs/updates.html.ep
    + Make sure the release is tagged (use tagrelease script)
        - Tag name is release-YYYYMMDD-NN
        - run: git tag <tag-name>
        - run: git push origin <tag-name>
    + log in to the vultr server
    + run: su - crp
    + run: cd crp
    + run: ./upd
    + NB: The upd script just pulls the latest version of whatever branch is checked out, not necessarily the right tag.
- Adding a new instructor qualification
    + Add record in DB by means of a schema update
    + Add certificate PDF for the qualification as pdfs/Qualification_Certificate_$code.pdf
    + Add a new PDF for the instructor course poster
    + Update the web site to talk about the new instructor course
        + "Home" page - short mention
        + "Programme" page(s) - more details, perhaps a new page split off
        + "Courses" page(s) - more details, perhaps a new page split off
        + "Instructors" page(s) - more details, perhaps a new page split off
        + Anything else
    + Add any new products to the shop
    + Enable any existing course-specific PDFs that apply to the course in templates/trainers/course_docs.html.ep
    + Add any new course-specific PDFs and enable in templates/trainers/course_docs.html.ep
    + Add parent course type(s) for the new qualification
- Adding a new parent course type
    + Add record in DB by means of a schema update
    + Review parent-course PDFs:
        + Some may be good for the new course without change
        + Some could be changed to work for the new course as well as existing courses
        + Some may need changing for the new course in a way that breaks them for existing courses (so new versions needed)
        + Additional, completely new documents may be needed
    + Create any new/altered parent-course PDFs required
    + Make new and existing PDFs available in templates/members/course_docs.html.ep
    + Create and show a new parent course advertisement page for the new parent course type
    + Create and show the right parent course online booking form for the parent course type
    + Create and show the right parent course PDF booking form for the parent course type
    + Add any new products to the shop (parent packs etc)
- Adding a new product to the members' shop
    - Log in to the PayPal account and:
        + Go to tools>all tools and use the paypal buttons tool
        + Click the Action menu on an existing button and choose 'Create similar button'
        + Change the description, code and price
        + Click the Create button
        + In the displayed code, look for the bit like <input type="hidden" name="hosted_button_id" value="GR29DKU4RSYDN">
        + Copy the value (GR29DKU4RSYDN in the example above)
    + Create a suitable image in a sensible place (like public/images/Photos)
    - In the CRP app
        + Edit templates/members/pages/shop.html.ep
        + At the bottom of the template, copy an existing $standard_item->() line and edit the parameters
        - Parameters are, in order:
            - $button_id - the code copied from PayPal, above
            - $required_quals - arrayref of qualification codes, one of which must be held to purchase (empty for open availability)
            - $price
            - $title
            - $width - of the image
            - $height - of the image
            - $image - URL
            - $description
- Adding a new product to the public-facing shop
    + Create suitable images in a sensible place (like public/images/Photos/shop). These will be displayed 472px wide.
    + Create a PayPal button as per the members' shop
    + Write description
    + Add the product to v2templates/main/pages/shop.html.ep
- Removing Claire's instructor trainer qualifications (28Jul17):
    " delete
    " from instructor_qualification iq
    " where (select code from qualification q where q.id = iq.qualification_id) in ('INST-TRAIN', 'INST-TRAIN-AN')
    " and (select email from login where login.id = iq.instructor_id) in ('wealdenreflexology@gmail.com')
    " ;



#----------------------------------------------------------------------------

- New things to me:
    - Mojolicious
    - DBIx::Class
    - Google maps API
    - Perl library: Imager
    - Perl library: PDF::API2
    - CSS3
    - HTML5
    - Carton
    - PayPal links
    - LetsEncrypt SSL cert
    - Google Webmaster tools - pagespeed, structured data etc
    - Google Analytics

#----------------------------------------------------------------------------

Vultr setup:
- 108.61.175.23
- To do:
    ~ mail sending from contact form
    ~ Mail forwarding?
    ~ root mail
    ~ postgres
    + auto update: https://www.vultr.com/docs/how-to-set-up-unattended-upgrades-on-debian-6-7
    + Disable root login (enable sudo for crp first!): https://www.vultr.com/docs/disable-or-restrict-root-login-via-ssh-on-linux
    ~ Remove apache
    ~ handle top level: http://kidsreflex.co.uk/
    + log rotation (mail/postgres/mojo)
    ~ Carton for perl packages
- commands:
    # useradd crp
    # mkdir /home/crp
    # chown crp.crp /home/crp
    # aptitude install authbind
    # touch /etc/authbind/byport/80
    # chown crp /etc/authbind/byport/80
    # chmod u+x /etc/authbind/byport/80
    # touch /etc/authbind/byport/443
    # chown crp /etc/authbind/byport/443
    # chmod u+x /etc/authbind/byport/443
    # aptitude install git
    # aptitude install postgresql
    # su - postgres -c "createuser crp -SdR"
    # su - postgres -c "psql -U postgres -d postgres -c \"alter user crp with password 'cr12114';\""
    # su - postgres -c "psql -U postgres -c \"create database crp with owner = crp;\""
    # # Create initial account like: su - postgres -c "psql -U crp -c \"insert into login (email) values ('sue@susanquayle.co.uk');\""
    # aptitude install cpanminus
    # aptitude install make
    # aptitude install gcc
    # aptitude install libc-dev
    # aptitude install exim4
    # aptitude install bsd-mailx
    # aptitude install postgresql-server-dev-9.1
    # aptitude install libjpeg-dev
    # aptitude install openssl
    # aptitude install libio-socket-ssl-perl
    # aptitude install libssl-dev
    # hostname www.kidsreflex.co.uk
    # cpanm carton
    # su - crp
        $ mkdir crp
        $ cd crp
        $ git clone https://github.com/merlynkline/crp
        $ carton install
        $ carton exec ./script/crp migrate install
        $ authbind --deep carton exec hypnotoad script/crp daemon
        $ mkdir ssl
        $ cd ssl
        $ scp merlyn@home.binary.co.uk:crp/ssl/kidsreflex.co.uk.crt .
        $ scp merlyn@home.binary.co.uk:crp/ssl/kidsreflex.co.uk.key .
    # Get vultr to remove port 25 block
    # dpkg-reconfigure exim4-config
        - Set general type to internet site mail handled directly by SMTP, set domain to kidsreflex.co.uk, everything else default
    # sed -i "14 i su - crp -c \"cd crp; authbind --deep carton exec hypnotoad script/crp daemon\"" /etc/rc.local
    # # Create backup system:
    # mkdir /var/backup
    # # Create /var/backup/backup:
        " #!/bin/sh
        "
        "
        " BACKUP_DIR=var/backup
        "
        " cd /
        " su - postgres -c "pg_dumpall -c" | gzip > $BACKUP_DIR/postgres_backup.gz
        " tar -zcf $BACKUP_DIR/backup.tar.gz \
        "   $BACKUP_DIR/postgres_backup.gz \
        "   $BACKUP_DIR/backup \
        "   home/crp/crp/public/images/Instructors/photos/ \
        "
        " rm -rf $BACKUP_DIR/postgres_backup.gz
        " scp -q $BACKUP_DIR/backup.tar.gz crpbackup@home.binary.co.uk:crp.backup.tar.gz
    # echo "1 1 * * * /var/backup/backup" >> /var/spool/cron/crontabs/root
    # echo "7 3 * * * kill -USR2 `cat /home/crp/crp/script/hypnotoad.pid`" >> /var/spool/cron/crontabs/crp
    # chown crp.crontab /var/spool/cron/crontabs/crp
    # chmod 600 /var/spool/cron/crontabs/crp
- Change root email in /etc/aliases: root: www.kidsreflex.co.uk+root@binary.co.uk



