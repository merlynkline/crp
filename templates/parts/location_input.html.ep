%#<!DOCTYPE html>
%# Google location API support in page header
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAv7Z_VkzGt4qRPF7gbyYhWUH9R35rHQuY&v=3.exp"></script>
    <script>
        var locationInputHandler = {
            geocoder:   null,
            map:        null,
            marker:     null,
            waitCount:  0,
            ready:      false,

            latElement: function() { return(document.getElementById('location-input-latitude')); },
            lngElement: function() { return(document.getElementById('location-input-longitude')); },

            codeAddress: function() {
                var address = document.getElementById('location-input-location').value;
                // GMaps seems to return some odd results when everything is lowercase
                address = address.replace(/\w\S*/g, function(txt) {
                    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
                });
                this.waitCount  = 0;
                this.ready      = false;
                var that = this;
                that.latElement().value = '';
                that.lngElement().value = '';
                this.geocoder.geocode( {address: address || 'London'}, function(results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        var loc = results[0].geometry.location;
                        that.latElement().value = address ? loc.lat() : '';
                        that.lngElement().value = address ? loc.lng() : '';
                        that.map.panTo(loc);
                        if(that.marker) { that.marker.setMap(null); }
                        if(address) {
                            that.marker = new google.maps.Marker({
                                map:        that.map,
                                position:   loc
                            });
                        }
                    }
                    that.ready = true;
                });
            },

            submitWhenReady: function() {
                if(this.waitCount > 10 || this.ready) {
                    var locationInput = document.getElementById('location-input-location');
                    locationInput.form.onsubmit = null;
                    locationInput.form.submit();
                }
                else {
                    this.waitCount++;
                    var that = this;
                    setTimeout(function() { that.submitWhenReady(); }, 50);
                }
                return false;
            },

            keyPressHandler: function(ev) {
                var keyCode = ('charCode' in ev) ? ev.charCode : ev.keyCode;
                if(keyCode == 13) {
                    this.codeAddress();
                    this.submitWhenReady();
                    return false;
                }
                return true;
            },

            init: function() {
                this.geocoder = new google.maps.Geocoder();
                var lat, lng;
                if(this.latElement().value) {
                    lat = this.latElement().value;
                    lng = this.lngElement().value;
                }
                else {
                    // London
                    lat = 51.5;
                    lng = -0.13;
                }
                var latlng = new google.maps.LatLng(lat, lng);
                var mapOptions = {
                    center:             latlng,
                    draggable:          false,
                    zoom:               8,
                    streetViewControl:  false
                }
                this.map = new google.maps.Map(document.getElementById('location-input-map-canvas'), mapOptions);
                this.codeAddress();
                var locationInput = document.getElementById('location-input-location');
                var that = this;
                locationInput.onblur        = function() { that.codeAddress(); };
                locationInput.form.onsubmit = function() { that.submitWhenReady(); };
                locationInput.onkeypress    = function(ev) { that.keyPressHandler(ev); };
            }
        };

        google.maps.event.addDomListener(window, 'load', function() { locationInputHandler.init(); });

    </script>

